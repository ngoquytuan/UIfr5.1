version: '3.8'

services:
  chatui:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-chatui
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL:-ws://localhost:8000}
      - NEXT_PUBLIC_MAX_FILE_SIZE=${NEXT_PUBLIC_MAX_FILE_SIZE:-10485760}
      - NEXT_PUBLIC_ALLOWED_FILE_TYPES=${NEXT_PUBLIC_ALLOWED_FILE_TYPES:-.pdf,.doc,.docx,.txt,.md}
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME:-RAG Chatbot UI}
      - NEXT_PUBLIC_APP_VERSION=${NEXT_PUBLIC_APP_VERSION:-1.0.0}
      - NEXT_PUBLIC_ENVIRONMENT=${NEXT_PUBLIC_ENVIRONMENT:-production}
      - NEXT_PUBLIC_ENABLE_FILE_UPLOAD=${NEXT_PUBLIC_ENABLE_FILE_UPLOAD:-true}
      - NEXT_PUBLIC_ENABLE_EXPORT=${NEXT_PUBLIC_ENABLE_EXPORT:-true}
      - NEXT_PUBLIC_ENABLE_SEARCH=${NEXT_PUBLIC_ENABLE_SEARCH:-true}
      - NEXT_PUBLIC_ENABLE_DARK_MODE=${NEXT_PUBLIC_ENABLE_DARK_MODE:-true}
      - NEXT_PUBLIC_ENABLE_CSP=${NEXT_PUBLIC_ENABLE_CSP:-true}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rag-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: rag-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - chatui
    restart: unless-stopped
    networks:
      - rag-network

networks:
  rag-network:
    driver: bridge
    external: false

volumes:
  logs:
    driver: local